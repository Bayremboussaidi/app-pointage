stages:
  - build_frontend
  - build_backend
  - push_images
  - update_k8s

variables:
  FRONT_DIR: "front"
  BACK_DIR: "glob/demo"
  REGISTRY: "registry.gitlab.com/bayremboussaidi/pointage"
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: ""

build_angular_frontend:
  stage: build_frontend
  image: node:18
  script:
    - echo "ðŸ“¦ Installing dependencies and building Angular app..."
    - cd $FRONT_DIR
    - npm install --legacy-peer-deps
    - npm run build -- --configuration=production
    - docker build -t $REGISTRY/frontend:$IMAGE_TAG -f Dockerfile .

build_backend:
  stage: build_backend
  image: maven:3.9.6-eclipse-temurin-21-alpine
  services:
    - docker:20.10.16-dind
  before_script:
    - apk add --no-cache docker-cli
  script:
    - cd $BACK_DIR
    - mvn clean package -DskipTests
    - docker build -t $REGISTRY/backend:$IMAGE_TAG -f Dockerfile.back .
  artifacts:
    paths:
      - $BACK_DIR/target/

push_images:
  stage: push_images
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $REGISTRY/frontend:$IMAGE_TAG
    - docker push $REGISTRY/backend:$IMAGE_TAG
  needs:
    - build_angular_frontend
    - build_backend

update_k8s:
  stage: update_k8s
  image: alpine/git
  script:
    - git config --global user.email "ci@example.com"
    - git config --global user.name "GitLab CI"
    - cd k8s
    - sed -i "s|image: .*frontend.*|image: ${REGISTRY}/frontend:${IMAGE_TAG}|g" frontend-deployment.yaml
    - sed -i "s|image: .*backend.*|image: ${REGISTRY}/backend:${IMAGE_TAG}|g" backend-deployment.yaml
    - git add .
    - git commit -am "ðŸ”„ Update image tags to ${IMAGE_TAG}" || echo "No changes to commit"
    - git push origin main
  needs:
    - push_images