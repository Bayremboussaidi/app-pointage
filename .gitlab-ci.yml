stages:
  - build_frontend
  - build_backend
  - push_images
  - update_k8s
variables:
  FRONT_DIR: "front"
  BACK_DIR: "glob/demo"
  REGISTRY: "registry.gitlab.com/bayremboussaidi/pointage"
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375  # Required for dind connection
  DOCKER_BUILDKIT: 1  # Enable modern buildkit
build_angular_frontend:
  stage: build_frontend
  image: node:18-bookworm-slim
  before_script:
    - node -v
    - npm -v
  script:
    - echo "ðŸ“¦ Installing dependencies and building Angular app..."
    - cd $FRONT_DIR
    - npm install --legacy-peer-deps
    - npm run build -- --configuration=production
build_backend:
  stage: build_backend
  image: maven:3.9.6-eclipse-temurin-21-alpine
  cache:
    key:
      files:
        - glob/demo/pom.xml
    paths:
      - glob/demo/.m2/repository
  script:
    - cd glob/demo
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - glob/demo/target/
push_images:
  stage: push_images
  image: docker:20.10.16

  
  services:
    - docker:20.10.16-dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $REGISTRY/frontend:$IMAGE_TAG
    - docker push $REGISTRY/backend:$IMAGE_TAG
  needs:
    - build_angular_frontend
    - build_backend



update_k8s:
  stage: update_k8s
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script:
    - echo "$KUBECONFIG_CONTENT" > $KUBECONFIG
  script:
    - export IMAGE_TAG=$IMAGE_TAG
    - export REGISTRY=$REGISTRY
    - envsubst < k8s/frontend-deployment.yaml | kubectl apply -f -
    - kubectl apply -f k8s/frontend-service.yaml
    - envsubst < k8s/backend-deployment.yaml | kubectl apply -f -
    - kubectl apply -f k8s/backend-service.yaml
  needs:
    - push_images